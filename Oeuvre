/**
*@author JLM
* Classe representant tout type de Oeuvre dans la videotheque.
*
*/
public class Oeuvre
{
	private String titreOeuvre, realisateur, compositeur,distinctions;
	Genre genre;
	private int anneeSortie, dureeMinutes;
	// private Personne[] casting;		//rôles titres d'une oeuvre.
	private Arraylist<Personne> casting = new Arraylist<>(); // roles titre d'une oeuvre.
	
	/**
	*Constructeur sans parametre d'objets de type Oeuvre. A utiliser pour tester par defaut.
	*/
	public Oeuvre()
	{
		this.titreOeuvre = "The Lion King";
		this.realisateur = "Jsais pas, mais c'est Disney";
		this.compositeur = "Hans Zimmer";
		this.anneeSortie = 1994;
		this.dureeMinutes = 89;
	    	genre.setGenre("Animation 2D");
	}
	
	/**
	*Constructeur d'objets de type Oeuvre.
	*@param ti comme titre du Oeuvre, real comme realisateur du Oeuvre, an comme annee de sortie du Oeuvre, duree comme duree en minutes du Oeuvre
	*
	*/
	public Oeuvre(String ti,String real,String comp, int an, int duree, String genre)
	{
		this.titreOeuvre = ti;
		this.realisateur = real;
		this.compositeur = comp;
		this.anneeSortie = an;
		this.dureeMinutes = duree;
		genre.setGenre(genre);
		
	}
	
	/**
	*Cette methode renvoie le titre du Oeuvre sous forme de chaine de caracteres
	*@return Le titre du Oeuvre
	*/
	public String getTitre()
	{
		return titreOeuvre;
	}
	
	/**
	*@param titre le titre du Oeuvre a
	*
	*/
	public void setTitre(String titre)
	{
			this.titreOeuvre = titre;
	}
	
	/**
	*
	*Cette methode renvoie le nom du réalisateur du Oeuvre
	*@return le nom du realisateur
	*/
	public String getRealisateur(int indice)
	{
		String desc = "";
		for(int i = 0; i < casting.length; i++)
		{
			if(casting[i] == casting[indice] && casting[i].getMetier().equalsIgnoreCase("realisateur"))
			{
				desc += "Prenom : " + casting[i].getPrenom() + " Nom : " + casting[i].getNom() + " Profession :" + casting[i].getMetier(); 
			}	
		}
		return realisateur;
	}
	
	/**
	*Methode d'insertion de realisateur.
	*@param real le réalisateur à ajouter.
	*
	*/
	public void setRealisateur(String real)
	{
		this.realisateur = real;
	}
	
	/**
	* Methode de recuperation de la duree d'un Oeuvre.
	*@return la duree du Oeuvre en minutes.
	*/
	public int getDuree()
	{
		return dureeMinutes;
	}
	
	/**
	*
	*@param minutes La durée en minutes
	*/
	public void setDuree(int minutes)
	{
		this.dureeMinutes = minutes;
	}
	
	/**
	*
	*@return l'annee de sortie du Oeuvre
	*/
	public int getAnneeSortie()
	{
		return anneeSortie;
	}
	
	/**
	* Methode d'ajout de l'année de sortie d'un Oeuvre.
	*@param anSortie La date de sortie du Oeuvre à rajouter.
	*/
	public void setAnneeSortie(int anSortie)
	{
		this.anneeSortie = anSortie;
	}
	
	/**
	*
	*Methode de recuperation d'un membre du casting.
	*@param indice l'acteur dans la liste
	*/
	public String getActeurs(Personne act)
	{
		String desc = "";
		for(Personne p : casting)
		{
			if(casting.contains(act))
			{
				desc += "Prenom : " + casting.get(act).getPrenom() + " Nom : " + castingget(i).getNom() + " Profession :" + casting(i).getMetier();
			}	
		} 
		return desc;
	}
	
	/*
	*Methode de recuperation du genre d'un Oeuvre.
	* @return Le genre du Oeuvre.
	*
	*/
	public Genre getGenre()
	{
		return genre;
	}
	
	/**
	*
	*Methode d'ajout d'un/e acteur/actrice au casting du Oeuvre.
	*/
	public void addActeur(Personne act)
	{
		boolean dejaAjoute = false;
		for(Personne p : casting)
		{
			if(casting.get(i) == act)
			{
				dejaAjoute = true;
			}
		}
		if(!dejaAjoute)
		{
			casting.add(act);
		}
	}
	
	public Personne retraitActeur(Personne act)
	{
		if(getActeurs != "")
		{
			return casting.remove(act);
		}
		System.out.println("L'element ne se trouve pas dans la liste.");
		return null;
	}
}
