/**
*Classe representant un ensemble de films par utilisateurs.
*
*/
public class Videotheque
{
	private Film[] catalogue;
	
	/**
	*Constructeur d'objet de type Videotheque
	*
	*/
	public Videotheque()
	{
		
	}
	/**
	*Methode d'interversion de deux cases d'un tableau.
	*@param val1 val2 deux entiers representant des indices d'un tableau.
	*
	*/
	public void swapFilm(int val1, int val2)
	{
		Film temp = catalogue[val1];
		catalogue[val1] = catalogue[val2];
		catalogue[val2] = temp;
		
		
	}
	
	/**
	*
	* Methode de tri de la videotheque, selon un classement croissant, par genre, de l'ensemble des films.
	* (Bubble sort)
	*/
	public void triCroissantParGenre()
	{
		/*boolean trie = false; // tableau entierement trie ou non.
		for(int i = 0; i < catalogue.length && trie == false; i++)
		{
			if(catalogue[i].getNomGenre() > catalogue[i++].getNomGenre())
			{
				swapFilm(catalogue[i],catalogue[i++]);

			}
			trie = true;
		}
		*/
		
		
	}
	
	/**
	*Methode de tri decroissant par order de genre.
	*
	*/
	public void triDecroissantParGenre(Film[] cat)
	{
		/*boolean trie = false; // tableau entierement trie ou non.
		for(int i = 0; i < catalogue.length && trie == false; i++)
		{
			if(catalogue[i].getNomGenre() < catalogue[i++].getNomGenre())
			{
				swapFilm(catalogue[i],catalogue[i++]);

			}
			trie = true;
		}
		*/
		
	}
	public void triCroissantParDateParution(Film[] cat)
	{
		/*boolean trie = false; // tableau entierement trie ou non.
		for(int i = 0; i < catalogue.length && trie == false; i++)
		{
			if(catalogue[i].getAnneeSortie() > catalogue[i++].getAnneeSortie())
			{
				swapFilm(catalogue[i],catalogue[i++]);

			}
			trie = true;
		}
		*/
		
	}
	
	public void triDecroissantParDateParution(Film[] cat)
	{
		/*boolean trie = false; // tableau entierement trie ou non.
		for(int i = 0; i < catalogue.length && trie == false; i++)
		{
			if(catalogue[i].getAnneeSortie() < catalogue[i++].getAnneeSortie())
			{
				swapFilm(catalogue[i],catalogue[i++]);

			}
			trie = true;
		}
		*/
		
	}
	
	public void triCroissantParTitre()
	{
		/*boolean trie = false; // tableau entierement trie ou non.
		for(int i = 0; i < catalogue.length && trie == false; i++)
		{
			if(catalogue[i].getTitre() > catalogue[i++].getTitre())
			{
				swapFilm(catalogue[i],catalogue[i++]);

			}
			trie = true;
		}
		*/
		
	}
	
	public void triDecroissantParTitre(Film[] cat)
	{
		/*boolean trie = false; // tableau entierement trie ou non.
		while(!trie)
		{
		for(int i = 0; i < catalogue.length && trie == false; i++)
		{
			if(catalogue[i].getTitre() < catalogue[i++].getTitre())
			{
				swapFilm(catalogue[i],catalogue[i++]);

			}
			trie = true;
		}
		*/
		
	}
	
	/*public Film rechercheLineaire(String title)
	{
		for(int i = 0; i < catalogue.length; i++)
		{
			if(catalogue[i].titre == title)
			{
				return catalogue[i];
			}
		}
	}*/
}
